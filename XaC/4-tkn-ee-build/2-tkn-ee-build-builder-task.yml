---
# https://raw.githubusercontent.com/tektoncd/catalog/main/task/ansible-builder/0.1/ansible-builder.yaml
apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  namespace: ansible-ee-build
  name: ansible-builder
  labels:
    app.kubernetes.io/version: "0.1"
  annotations:
    tekton.dev/pipelines.minVersion: "0.12.0"
    tekton.dev/displayName: ansible-builder
    tekton.dev/categories: Build Tools
    tekton.dev/tags: ansible, ansible-builder, build-tool, automation
    tekton.dev/platforms: "linux/amd64"
spec:
  description: >-
    Creates a build context (including a Containerfile) from an execution environment spec.
    This build context is populated with dependencies including requirements files.
  workspaces:
    - name: source
      description: The source workspace where the execution environment code is cloned.
  params:
    - description: Execution environment file definition.
      name: FILENAME
      type: string
      default: execution-environment.yml

    - description: Execution environment build context.
      name: BUILD_CONTEXT
      type: string
      default: context

    - name: OUTPUT_FILENAME
      description: Name of file to write image definition to. Either Dockerfile or Containerfile.
      type: string
      default: Containerfile

    - description: ansible-builder output verbosity.
      name: VERBOSITY
      type: string
      default: "2"

    - name: BUILDER_IMAGE
      description: The location of the ansible-builder image.
      type: string
      default: registry.redhat.io/ansible-automation-platform-24/ansible-builder-rhel9:latest
 ## Red Hat entitlement and automation token mounted from secrets
  volumes:
  - name: etc-pki-entitlement
    secret:
      defaultMode: 420
      secretName: etc-pki-entitlement
  - name: ansible-config
    secret:
      defaultMode: 420
      secretName: ansible-cfg
  steps:
    - name: ansible-builder-create
      volumeMounts:
      - name: etc-pki-entitlement
        mountPath: /etc/pki/entitlement-host
      - name: ansible-config
        mountPath: /etc/ansible.cfg
    
        
      workingDir: $(workspaces.source.path)
      image: $(params.BUILDER_IMAGE)
      script: |
        #!/bin/sh

        set -eux -o       

        ansible-builder create -f "$(params.FILENAME)" -c \
        "$(params.BUILD_CONTEXT)" --output-filename "$(params.OUTPUT_FILENAME)" \
        -v "$(params.VERBOSITY)"